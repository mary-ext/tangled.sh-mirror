// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package tangled

// schema: sh.tangled.repo.tags

import (
	"bytes"
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

const (
	RepoTagsNSID = "sh.tangled.repo.tags"
)

// RepoTags calls the XRPC method "sh.tangled.repo.tags".
//
// cursor: Pagination cursor
// limit: Maximum number of tags to return
// repo: Repository identifier in format 'did:plc:.../repoName'
func RepoTags(ctx context.Context, c util.LexClient, cursor string, limit int64, repo string) ([]byte, error) {
	buf := new(bytes.Buffer)

	params := map[string]interface{}{}
	if cursor != "" {
		params["cursor"] = cursor
	}
	if limit != 0 {
		params["limit"] = limit
	}
	params["repo"] = repo
	if err := c.LexDo(ctx, util.Query, "", "sh.tangled.repo.tags", params, nil, buf); err != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}
